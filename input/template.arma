# Grid is defined by the no. of points along each dimension and the length
# of the output wavy surface. It has the following format:
#
# 	out_grid = (npoints_t,npoints_x,npoints_y) : (length_t,length_x,length_y)
#
# If the length is omitted, it is automatically calculated
# to make patch size of equal to 1 (i.e. length=npoints-1).
# NB: No. of patches equals to the no. of points minus 1.
out_grid = (200,40,40)

# AR model order
ar_order = (7,7,7)

# MA model order
ma_order = (20,10,10)

# turn on/off least squares for AC matrix
# (as of 2016-07-28 it is broken)
least_squares = 0

acf = {
	# ACF function approximation. Possible values:
	# - standing_wave
	# - propagating_wave
	func = propagating_wave

	# Grid for ACF function approximations. The format is the same as for out_grid.
	grid = (10,10,10) : (2.5,5,5)
}


# Model to use. Possible values:
# - AR
# - MA
# - ARMA
# - LH
# - plain_wave
model = MA

# Algorithm that determines MA coefficients. Possible values:
# - fixed_point_iteration
# - newton_raphson
# As of 2016-08-16 newton_raphson is broken.
ma_algorithm = fixed_point_iteration

# Verification scheme. Possible values:
# - none (perform no verification of the resulting wavy surface)
# - summary (validate mean, variance and distributions of wave characteristics, default value)
# - quantile (do everything from summary and write quantile plots to files)
# - manual (write raw data to files)
verification = manual

# The size of wavy surface partition. Each partition is computed
# in parallel, given that all dependent partitions has been computed as well.
# The smaller the size, the higher is parallelism. If partition size is not set 
# or is invalid, the programme tries to guess optimal size based on the number
# of threads and the number of coefficients in the model.
#partition = (0,0,0)
